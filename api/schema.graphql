type Query {
  feed: [Match!]!
  tournaments(filter: TournamentFilter): [Tournament!]!
  tournament(slug: String!): Tournament!
}

type Player {
  id: ID!
  firstName: String!
  lastName: String!
  fullName: String!
  location: String!
  rating: Int!
  avatar: String!
}

type Match {
  id: ID!
  lastModified: String!
  name: String!
  challenger: Player!
  defender: Player!
  challengerScores: [Int!]!
  defenderScores: [Int!]!
  challengerScore: Int!
  defenderScore: Int!
  challengerWon: Boolean!
}

type Tournament {
  id: ID!
  name: String!
  slug: String!
  location: String!
  description: String!
  startDate: String!
  endDate: String!
  cover: String!
  participants: [Player!]!
}

enum TournamentFilter {
  ALL
  NOW
  UPCOMING
  PREVIOUS
}
